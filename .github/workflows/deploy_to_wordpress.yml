name: Deploy to WordPress.org

on:
  release:
    types: [published]  # opzionale: parte quando pubblichi una GitHub Release
  workflow_dispatch:          # avvio manuale dal tab Actions
jobs:
  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest

    env:
      SLUG: cityevents          # <-- slug del plugin su wp.org (uguale all’URL SVN)
      PHP_VERSION: '8.3'
      SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
      SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}

    steps:
      - name: Check required secrets
        run: |
          [ -n "${{ secrets.SVN_USERNAME }}" ] || { echo "Missing secret: SVN_USERNAME"; exit 1; }
          [ -n "${{ secrets.SVN_PASSWORD }}" ] || { echo "Missing secret: SVN_PASSWORD"; exit 1; }
    
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version from tag
        id: getver
        run: |
          REF="${GITHUB_REF##*/}"          # es. v1.0.0
          VER="${REF#v}"                   # es. 1.0.0
          echo "version=${VER}" >> $GITHUB_OUTPUT

      - name: Prepare build dir
        run: |
          rm -rf dist
          mkdir -p dist
          rsync -av --delete --exclude-from=".distignore" ./ dist/
          # porta i CONTENUTI in root (dove opera l’action 10up)
          rsync -av --delete dist/ ./

      - name: WordPress plugin deploy
        uses: 10up/action-wordpress-plugin-deploy@stable
        env:
          SLUG: cityevents          # <-- slug del plugin su wp.org (uguale all’URL SVN)
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}

        with:
          generate-zip: true   # opzionale
          dry-run: false       # metti true per test senza pubblicare
